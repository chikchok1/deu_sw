/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.Session;
import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author YangJinWon
 */
public class ReservedRoomView extends javax.swing.JFrame {

   public ReservedRoomView() {
        initComponents();
        
    }
   
   private void loadReservedRooms(String selectedRoom) {
    try {
        String userId = Session.getLoggedInUserId();
        if (userId == null || userId.isEmpty()) return;

        char userType = userId.charAt(0); // 'S', 'P', 'A'
        String userName = Session.getLoggedInUserName(); // 예약자 이름 확인용

        // 테이블 초기화
        for (int row = 0; row < jTable1.getRowCount(); row++) {
            for (int col = 1; col < jTable1.getColumnCount(); col++) {
                jTable1.setValueAt("", row, col);
            }
        }

        BufferedReader reader = new BufferedReader(new FileReader("data/ReserveClass.txt"));
        String line;

        while ((line = reader.readLine()) != null) {
            String[] parts = line.split(",");
            if (parts.length < 5) continue;

            String name = parts[0].trim();
            String room = parts[1].trim();
            String day = parts[2].trim();
            String period = parts[3].trim();
            String purpose = parts[4].trim();

            // 선택된 강의실 필터
            if (!selectedRoom.equals("선택") && !room.equals(selectedRoom)) {
                continue;
            }

            // 학생일 경우, 자신의 예약이 아니면 continue
            if (userType == 'S' && !name.equals(userName)) {
                continue;
            }

            int col = getDayColumn(day);
            int row = getPeriodRow(period);

            if (col != -1 && row != -1) {
                String displayText = (userType == 'S') ? "예약됨" : name;

                String current = (String) jTable1.getValueAt(row, col);
                if (current == null || current.isEmpty()) {
                    jTable1.setValueAt(displayText, row, col);
                } else if (!current.contains(displayText)) {
                    jTable1.setValueAt(current + ", " + displayText, row, col);
                }
            }
        }

        reader.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}


   private int getDayColumn(String day) {
    switch (day) {
        case "월요일": return 1;
        case "화요일": return 2;
        case "수요일": return 3;
        case "목요일": return 4;
        case "금요일": return 5;
        default: return -1;
    }
}

   private int getPeriodRow(String period) {
    switch (period) {
        case "1교시(09:00~10:00)": return 0;
        case "2교시(10:00~11:00)": return 1;
        case "3교시(11:00~12:00)": return 2;
        case "4교시(12:00~13:00)": return 3;
        case "5교시(13:00~14:00)": return 4;
        case "6교시(14:00~15:00)": return 5;
        case "7교시(15:00~16:00)": return 6;
        case "8교시(16:00~17:00)": return 7;
        case "9교시(17:00~18:00)": return 8;
        default: return -1;
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Class = new javax.swing.JComboBox<>();
        Lab = new javax.swing.JComboBox<>();
        Check = new javax.swing.JButton();
        Before = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1교시(09:00-10:00)", "", null, null, null, null},
                {"2교시(10:00-11:00)", null, null, null, null, null},
                {"3교시(11:00-12:00)", null, null, null, null, null},
                {"4교시(12:00-13:00)", null, null, null, null, null},
                {"5교시(13:00-14:00)", null, null, null, null, null},
                {"6교시(14:00-15:00)", null, null, null, null, null},
                {"7교시(15:00-16:00)", null, null, null, null, null},
                {"8교시(16:00-17:00)", null, null, null, null, null},
                {"9교시(17:00-18:00)", null, null, null, null, null}
            },
            new String [] {
                "", "월요일", "화요일", "수요일", "목요일", "금요일"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel1.setText("예약 내역 조회");

        jLabel2.setText("강의실");

        jLabel3.setText("실습실");

        Class.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "선택", "908호", "912호", "913호", "914호" }));
        Class.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassActionPerformed(evt);
            }
        });

        Lab.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "선택", "911호", "915호", "916호", "918호" }));
        Lab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LabActionPerformed(evt);
            }
        });

        Check.setText("조회");
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });

        Before.setText("이전");
        Before.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BeforeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(293, 293, 293)
                            .addComponent(jLabel2)
                            .addGap(58, 58, 58)
                            .addComponent(jLabel3)
                            .addGap(45, 45, 45))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Before)
                                    .addGap(515, 515, 515)
                                    .addComponent(Check))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(Lab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Check)
                    .addComponent(Before))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
 String selectedRoom = (String) Class.getSelectedItem(); 
    loadReservedRooms(selectedRoom);
    }//GEN-LAST:event_CheckActionPerformed

    private void ClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassActionPerformed
String selectedRoom = (String) Class.getSelectedItem();
    loadReservedRooms(selectedRoom);
    }//GEN-LAST:event_ClassActionPerformed

    private void LabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LabActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LabActionPerformed

    private void BeforeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BeforeActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_BeforeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservedRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservedRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservedRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservedRoomView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservedRoomView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Before;
    private javax.swing.JButton Check;
    private javax.swing.JComboBox<String> Class;
    private javax.swing.JComboBox<String> Lab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
